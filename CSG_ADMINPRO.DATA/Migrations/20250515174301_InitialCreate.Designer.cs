// <auto-generated />
using System;
using CSG_ADMINPRO.DATA;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CSG_ADMINPRO.DATA.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250515174301_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CSG_ADMINPRO.DOMAIN.Entities.Asegurado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("SeguroId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Asegurad__3214EC077F9F108A");

                    b.HasIndex("ClienteId");

                    b.HasIndex("SeguroId");

                    b.ToTable("Asegurados");
                });

            modelBuilder.Entity("CSG_ADMINPRO.DOMAIN.Entities.Cita", b =>
                {
                    b.Property<int>("CitaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CitaId"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaActualizcion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Motivo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Notas")
                        .HasColumnType("text");

                    b.Property<string>("Ubicacion")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("CitaId")
                        .HasName("PK__Citas__F0E2D9D2A825B1FB");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EstadoId");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("CSG_ADMINPRO.DOMAIN.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id")
                        .HasName("PK__Clientes__3214EC076928CF58");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("CSG_ADMINPRO.DOMAIN.Entities.Consulta", b =>
                {
                    b.Property<int>("ConsultaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConsultaId"));

                    b.Property<int>("CitaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FechaActualizcion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<TimeOnly>("Hora")
                        .HasColumnType("time");

                    b.Property<string>("Notas")
                        .HasColumnType("text");

                    b.Property<string>("Resolucion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ConsultaId")
                        .HasName("PK__Consulta__7D0B7DCC6A475DD4");

                    b.HasIndex("CitaId");

                    b.HasIndex("EstadoId");

                    b.ToTable("Consultas");
                });

            modelBuilder.Entity("CSG_ADMINPRO.DOMAIN.Entities.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NombreEstado")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Estados__3214EC0779078810");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("CSG_ADMINPRO.DOMAIN.Entities.Seguro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Asegurada")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NombreSeguro")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("Prima")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Seguros__3214EC078F019190");

                    b.ToTable("Seguros");
                });

            modelBuilder.Entity("CSG_ADMINPRO.DOMAIN.Entities.Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NombreServicio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("CSG_ADMINPRO.DOMAIN.Entities.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Asunto")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("Fecha_Actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("Fecha_Creacion");

                    b.Property<DateTime?>("FechaResolucion")
                        .HasColumnType("datetime")
                        .HasColumnName("Fecha_Resolucion");

                    b.Property<string>("Prioridad")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TipoTicketId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Tickets__3214EC0756210803");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("CSG_ADMINPRO.DOMAIN.Entities.TicketsComentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaComentario")
                        .HasColumnType("datetime")
                        .HasColumnName("Fecha_comentario");

                    b.Property<int>("TicketComentarioEstado")
                        .HasColumnType("int");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Tickets___3214EC07E6AA8E45");

                    b.HasIndex("TicketComentarioEstado");

                    b.HasIndex("TicketId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Tickets_Comentarios", (string)null);
                });

            modelBuilder.Entity("CSG_ADMINPRO.DOMAIN.Entities.TicketsTipo", b =>
                {
                    b.Property<int>("TicketTpoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketTpoId"));

                    b.Property<string>("NombreTicketTipo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TicketTipoEstado")
                        .HasColumnType("int");

                    b.HasKey("TicketTpoId")
                        .HasName("PK__Tickets___C5CCEC49B27E2DAC");

                    b.HasIndex("TicketTipoEstado");

                    b.ToTable("Tickets_Tipos", (string)null);
                });

            modelBuilder.Entity("CSG_ADMINPRO.DOMAIN.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaveUsuario")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("CorreoUsuario")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCrecion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id")
                        .HasName("PK__Usuarios__3214EC0754151AEE");

                    b.HasIndex("EstadoId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("CSG_ADMINPRO.DOMAIN.Entities.Asegurado", b =>
                {
                    b.HasOne("CSG_ADMINPRO.DOMAIN.Entities.Cliente", "Cliente")
                        .WithMany("Asegurados")
                        .HasForeignKey("ClienteId")
                        .IsRequired()
                        .HasConstraintName("FK__Asegurado__Clien__22751F6C");

                    b.HasOne("CSG_ADMINPRO.DOMAIN.Entities.Seguro", "Seguro")
                        .WithMany("Asegurados")
                        .HasForeignKey("SeguroId")
                        .IsRequired()
                        .HasConstraintName("FK__Asegurado__Segur__236943A5");

                    b.Navigation("Cliente");

                    b.Navigation("Seguro");
                });

            modelBuilder.Entity("CSG_ADMINPRO.DOMAIN.Entities.Cita", b =>
                {
                    b.HasOne("CSG_ADMINPRO.DOMAIN.Entities.Cliente", "Cliente")
                        .WithMany("Cita")
                        .HasForeignKey("ClienteId")
                        .IsRequired()
                        .HasConstraintName("FK__Citas__ClienteId__46B27FE2");

                    b.HasOne("CSG_ADMINPRO.DOMAIN.Entities.Estado", "Estado")
                        .WithMany("Cita")
                        .HasForeignKey("EstadoId")
                        .IsRequired()
                        .HasConstraintName("FK__Citas__EstadoId__4A8310C6");

                    b.Navigation("Cliente");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("CSG_ADMINPRO.DOMAIN.Entities.Consulta", b =>
                {
                    b.HasOne("CSG_ADMINPRO.DOMAIN.Entities.Cita", "Cita")
                        .WithMany("Consulta")
                        .HasForeignKey("CitaId")
                        .IsRequired()
                        .HasConstraintName("FK__Consultas__CitaI__4D5F7D71");

                    b.HasOne("CSG_ADMINPRO.DOMAIN.Entities.Estado", "Estado")
                        .WithMany("Consulta")
                        .HasForeignKey("EstadoId")
                        .IsRequired()
                        .HasConstraintName("FK__Consultas__Estad__4E53A1AA");

                    b.Navigation("Cita");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("CSG_ADMINPRO.DOMAIN.Entities.Ticket", b =>
                {
                    b.HasOne("CSG_ADMINPRO.DOMAIN.Entities.Cliente", "Cliente")
                        .WithMany("Tickets")
                        .HasForeignKey("ClienteId")
                        .IsRequired()
                        .HasConstraintName("FK__Tickets__Descrip__30C33EC3");

                    b.HasOne("CSG_ADMINPRO.DOMAIN.Entities.Estado", "Estado")
                        .WithMany("Tickets")
                        .HasForeignKey("EstadoId")
                        .IsRequired()
                        .HasConstraintName("FK__Tickets__EstadoI__32AB8735");

                    b.HasOne("CSG_ADMINPRO.DOMAIN.Entities.Usuario", "Usuario")
                        .WithMany("Tickets")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK__Tickets__Usuario__31B762FC");

                    b.Navigation("Cliente");

                    b.Navigation("Estado");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CSG_ADMINPRO.DOMAIN.Entities.TicketsComentario", b =>
                {
                    b.HasOne("CSG_ADMINPRO.DOMAIN.Entities.Estado", "TicketComentarioEstadoNavigation")
                        .WithMany("TicketsComentarios")
                        .HasForeignKey("TicketComentarioEstado")
                        .IsRequired()
                        .HasConstraintName("FK__Tickets_C__Ticke__37703C52");

                    b.HasOne("CSG_ADMINPRO.DOMAIN.Entities.Ticket", "Ticket")
                        .WithMany("TicketsComentarios")
                        .HasForeignKey("TicketId")
                        .IsRequired()
                        .HasConstraintName("FK__Tickets_C__Ticke__3587F3E0");

                    b.HasOne("CSG_ADMINPRO.DOMAIN.Entities.Usuario", "Usuario")
                        .WithMany("TicketsComentarios")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK__Tickets_C__Usuar__367C1819");

                    b.Navigation("Ticket");

                    b.Navigation("TicketComentarioEstadoNavigation");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CSG_ADMINPRO.DOMAIN.Entities.TicketsTipo", b =>
                {
                    b.HasOne("CSG_ADMINPRO.DOMAIN.Entities.Estado", "TicketTipoEstadoNavigation")
                        .WithMany("TicketsTipos")
                        .HasForeignKey("TicketTipoEstado")
                        .IsRequired()
                        .HasConstraintName("FK__Tickets_T__Ticke__2DE6D218");

                    b.Navigation("TicketTipoEstadoNavigation");
                });

            modelBuilder.Entity("CSG_ADMINPRO.DOMAIN.Entities.Usuario", b =>
                {
                    b.HasOne("CSG_ADMINPRO.DOMAIN.Entities.Estado", "Estado")
                        .WithMany("Usuarios")
                        .HasForeignKey("EstadoId")
                        .IsRequired()
                        .HasConstraintName("FK__Usuarios__Estado__2B0A656D");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("CSG_ADMINPRO.DOMAIN.Entities.Cita", b =>
                {
                    b.Navigation("Consulta");
                });

            modelBuilder.Entity("CSG_ADMINPRO.DOMAIN.Entities.Cliente", b =>
                {
                    b.Navigation("Asegurados");

                    b.Navigation("Cita");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("CSG_ADMINPRO.DOMAIN.Entities.Estado", b =>
                {
                    b.Navigation("Cita");

                    b.Navigation("Consulta");

                    b.Navigation("Tickets");

                    b.Navigation("TicketsComentarios");

                    b.Navigation("TicketsTipos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("CSG_ADMINPRO.DOMAIN.Entities.Seguro", b =>
                {
                    b.Navigation("Asegurados");
                });

            modelBuilder.Entity("CSG_ADMINPRO.DOMAIN.Entities.Ticket", b =>
                {
                    b.Navigation("TicketsComentarios");
                });

            modelBuilder.Entity("CSG_ADMINPRO.DOMAIN.Entities.Usuario", b =>
                {
                    b.Navigation("Tickets");

                    b.Navigation("TicketsComentarios");
                });
#pragma warning restore 612, 618
        }
    }
}
